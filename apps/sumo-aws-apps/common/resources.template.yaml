AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'
Description: "Template to setup the common AWS and Sumo Logic resources for AWS Quick Start Solution."

Metadata:
  'AWS::CloudFormation::Interface':
    ParameterGroups:
      - Label:
          default: "Sumo Logic Access Configuration (Required)"
        Parameters:
          - SumoDeployment
          - SumoAccessID
          - SumoAccessKey
          - SumoOrganizationId
          - RemoveSumoResourcesOnDeleteStack

      - Label:
          default: "App Details - Collector Configuration"
        Parameters:
          - CreateCollector
          - CollectorName

      - Label:
          default: "App Details - Configuration"
        Parameters:
          - CreateBucket
          - BucketName
          - CreateTrail

      - Label:
          default: "AWS Quick Start configuration"
        Parameters:
          - QSS3BucketName
          - QSS3BucketRegion
          - QSS3KeyPrefix

    ParameterLabels:
      SumoDeployment:
        default: "Sumo Logic Deployment Name"
      SumoAccessID:
        default: "Sumo Logic Access ID"
      SumoAccessKey:
        default: "Sumo Logic Access Key"
      SumoOrganizationId:
        default: "Sumo Logic Organization Id"
      RemoveSumoResourcesOnDeleteStack:
        default: "Delete Sumo Logic Resources when stack is deleted"

      CreateCollector:
        default: "Create Sumo Logic Collector"
      CollectorName:
        default: "Collector Name"

      CreateBucket:
        default: "Create AWS S3 Bucket"
      BucketName:
        default: "AWS S3 Bucket Name"
      CreateTrail:
        default: "Create Trail for the provided Bucket"

      QSS3BucketName:
        default: "Quick Start S3 bucket name"
      QSS3BucketRegion:
        default: "Quick Start S3 bucket region"
      QSS3KeyPrefix:
        default: "Quick Start S3 key prefix"

Parameters:
  SumoDeployment:
    Type: String
    AllowedValues:
      - au
      - ca
      - de
      - eu
      - jp
      - us2
      - us1
      - in
      - fed
    Description: "Enter au, ca, de, eu, jp, us2, in, fed or us1."
  SumoAccessID:
    Type: String
    Description: "The Sumo Logic Access ID. Used for Sumo Logic API calls."
    AllowedPattern: ".+"
    ConstraintDescription: "Sumo Logic Access ID can not be empty."
  SumoAccessKey:
    Type: String
    Description: "The Sumo Logic Access Key. Used for Sumo Logic API calls."
    AllowedPattern: ".+"
    ConstraintDescription: "Sumo Logic Access Key can not be empty."
    NoEcho: true
  SumoOrganizationId:
    Description: "The Account Overview page displays information about your Sumo Logic organization. Used for IAM Role in Sumo Logic AWS Sources."
    Type: String
    AllowedPattern: ".+"
    ConstraintDescription: "Sumo Logic Organization Id can not be empty."
  RemoveSumoResourcesOnDeleteStack:
    AllowedValues:
      - true
      - false
    Default: true
    Description: "To delete collectors, sources and apps when the stack is deleted, set this parameter to true. Default is true.
                  Deletes the resources created by the stack. Deletion of updated resources will be skipped."
    Type: String

  CreateCollector:
    Type: String
    Description: "Yes -> To Create Sumo Logic Collector in Sumo Logic for AWS Quick Start Solution.
                  No -> Skip Installation of the collector."
    Default: 'Yes'
    AllowedValues:
      - 'Yes'
      - 'No'
  CollectorName:
    Type: String
    Description: Change the collector name to be created else default name will be used.
    Default: AWS-QuickStart-Collector

  CreateBucket:
    Type: String
    Description: "Yes - Create a new bucket in AWS S3."
    Default: 'Yes'
    AllowedValues:
      - 'Yes'
      - 'No'
  BucketName:
    Type: String
    Description: "New Bucket Name - Provide a unique Bucket Name if the flag is set to Yes."
  CreateTrail:
    Type: String
    Description: "Yes - Create a trail for the provided S3 Bucket"
    Default: 'Yes'
    AllowedValues:
      - 'Yes'
      - 'No'

  QSS3BucketName:
    AllowedPattern: "^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$"
    ConstraintDescription: "Quick Start bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-)."
    Default: "aws-quickstart"
    Description: "S3 bucket name for the Quick Start assets. This string can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-)."
    Type: "String"
  QSS3BucketRegion:
    Default: "us-east-1"
    Description: "The AWS Region where the Quick Start S3 bucket (QSS3BucketName) is hosted. When using your own bucket, you must specify this value."
    Type: String
  QSS3KeyPrefix:
    AllowedPattern: "^[0-9a-zA-Z-/]*$"
    ConstraintDescription: "Quick Start key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/)."
    Default: "quickstart-sumo-logic-log-centralization/"
    Description: "S3 key prefix for the Quick Start assets. Quick Start key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/)."
    Type: "String"

Conditions:
  UsingDefaultBucket: !Equals [!Ref QSS3BucketName, 'aws-quickstart']

  install_collector: !Equals [!Ref CreateCollector, 'Yes']
  create_target_s3_bucket: !Equals [!Ref CreateBucket, 'Yes']

  create_cloudtrail: !And
    - !Condition create_target_s3_bucket
    - !Equals [!Ref CreateTrail, 'Yes']
  create_sns_topic: !Or
    - !Condition create_target_s3_bucket
    - !Condition install_collector

Resources:
  SumoLogicHelperRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Path: /
      Policies:
        - PolicyName: SumoPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                  - cloudtrail:CreateTrail
                  - cloudtrail:DeleteTrail
                  - cloudtrail:UpdateTrail
                  - cloudtrail:StartLogging
                  - s3:ListAllMyBuckets
                  - s3:GetBucketLocation
                  - s3:GetBucketLogging
                  - s3:PutBucketLogging
                  - s3:PutBucketAcl
                  - s3:GetBucketAcl
                  - ec2:Describe*
                  - ec2:DeleteFlowLogs
                  - ec2:CreateFlowLogs
                  - logs:CreateLogDelivery
                  - logs:DeleteLogDelivery
                  - s3:GetBucketPolicy
                  - s3:PutBucketPolicy
                  - config:DescribeDeliveryChannels
                  - config:PutDeliveryChannel
                  - config:DeleteDeliveryChannel
                Resource: '*'

  SumoLogicLambdaHelper:
    Type: 'AWS::Serverless::Function'
    DependsOn: SumoLogicHelperRole
    Properties:
      Handler: main.handler
      Runtime: python3.11
      CodeUri:
        Bucket: !Sub
          - "${S3Bucket}"
          - S3Bucket: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
        Key: !Sub "${QSS3KeyPrefix}apps/sumo-aws-apps/sumologic-app-utils/sumo_app_utils.zip"
      MemorySize: 128
      Timeout: 900
      Role:
        Fn::GetAtt:
          - SumoLogicHelperRole
          - Arn

  SumoSourceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              AWS: arn:aws:iam::926226587429:root
            Action: sts:AssumeRole
            Condition:
              StringEquals:
                sts:ExternalId: !Sub "${SumoDeployment}:${SumoOrganizationId}"
      Path: "/"
      Policies:
        - PolicyName: SumoPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:GetObjectVersion
                  - s3:ListBucketVersions
                  - s3:ListBucket
                Resource:
                  "*"

  SumoHostedCollector:
    Type: Custom::Collector
    Condition: install_collector
    Properties:
      ServiceToken: !GetAtt SumoLogicLambdaHelper.Arn
      Region: !Ref "AWS::Region"
      CollectorType: Hosted
      RemoveOnDeleteStack: !Ref RemoveSumoResourcesOnDeleteStack
      CollectorName: !Ref CollectorName
      SumoAccessID: !Ref SumoAccessID
      SumoAccessKey: !Ref SumoAccessKey
      SumoDeployment: !Ref SumoDeployment

  SumoSNSTopic:
    Condition: create_sns_topic
    Type: "AWS::SNS::Topic"
    Properties:
      TopicName: !Sub "SumoSNSTopic-${AWS::StackName}"

  SumoSNSpolicy:
    Condition: create_sns_topic
    Type: "AWS::SNS::TopicPolicy"
    Properties:
      PolicyDocument:
        Id: SumoTopicPolicy
        Statement:
          - Action:
              - sns:Publish
            Condition:
              StringEquals:
                aws:SourceAccount: !Ref "AWS::AccountId"
              ArnLike:
                aws:SourceArn: !Sub "arn:aws:s3:*:*:*"
            Effect: Allow
            Principal:
              AWS: "*"
            Resource:
              - !Ref SumoSNSTopic
      Topics:
        - Ref: SumoSNSTopic

  TargetS3Bucket:
    Condition: create_target_s3_bucket
    Type: AWS::S3::Bucket
    DependsOn:
      - SumoSNSpolicy
    Properties:
      BucketName: !Ref BucketName
      NotificationConfiguration:
        TopicConfigurations:
          - Event: s3:ObjectCreated:Put
            Topic: !Ref SumoSNSTopic
    DeletionPolicy: Retain

  SumoCloudTrailExportPolicy:
    Condition: create_cloudtrail
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref BucketName
      PolicyDocument:
        Statement:
          - Sid: AWSCloudTrailAclCheck
            Effect: Allow
            Principal:
              Service: cloudtrail.amazonaws.com
            Action: s3:GetBucketAcl
            Resource:
              - !Sub "arn:aws:s3:::${BucketName}"
          - Sid: AWSCloudTrailWrite
            Effect: Allow
            Principal:
              Service: cloudtrail.amazonaws.com
            Action: s3:PutObject
            Resource:
              - !Sub "arn:aws:s3:::${BucketName}/*"
            Condition:
              StringEquals:
                s3:x-amz-acl: bucket-owner-full-control
          - Sid: AWSBucketExistenceCheck
            Effect: Allow
            Principal:
              Service: cloudtrail.amazonaws.com
            Action: s3:ListBucket
            Resource:
              - !Sub "arn:aws:s3:::${BucketName}"
          - Sid: AWSLogDeliveryWrite
            Effect: Allow
            Principal:
              Service: delivery.logs.amazonaws.com
            Action: s3:PutObject
            Resource:
              - !Sub "arn:aws:s3:::${BucketName}/*"
            Condition:
              StringEquals:
                s3:x-amz-acl: bucket-owner-full-control
          - Sid: AWSLogDeliveryAclCheck
            Effect: Allow
            Principal:
              Service: delivery.logs.amazonaws.com
            Action: s3:GetBucketAcl
            Resource:
              - !Sub "arn:aws:s3:::${BucketName}"

    DependsOn:
      - TargetS3Bucket

  SumoCloudTrail:
    Condition: create_cloudtrail
    Type: Custom::AWSTrail
    DependsOn:
      - SumoCloudTrailExportPolicy
    Properties:
      ServiceToken: !GetAtt SumoLogicLambdaHelper.Arn
      IsLogging: true
      IsMultiRegionTrail: false
      S3BucketName: !Ref BucketName
      TrailName: !Sub "SumoCloudTrail-${AWS::StackName}"

Outputs:
  StackName:
    Description: "Stack Name"
    Value: !Ref "AWS::StackName"
  SumoLogicLambdaHelperARN:
    Description: "Sumo Logic Lambda Helper ARN"
    Value: !GetAtt SumoLogicLambdaHelper.Arn
    Export:
      Name: !Sub "${AWS::StackName}-SumoLogicHelperFunctionARN"
  SumoSourceRoleARN:
    Description: "Sumo Logic Source Role ARN"
    Value: !GetAtt SumoSourceRole.Arn
    Export:
      Name: !Sub "${AWS::StackName}-SumoSourceRoleARN"
  SumoCollectorID:
    Description: "Sumo Logic Collector ID"
    Condition: install_collector
    Value: !GetAtt SumoHostedCollector.COLLECTOR_ID
    Export:
      Name: !Sub "${AWS::StackName}-CollectorID"
  SNSTopicArn:
    Description: "SNS Topic ARN"
    Condition: create_sns_topic
    Value: !Ref SumoSNSTopic
    Export:
      Name: !Sub "${AWS::StackName}-SNSTopicArn"
  BucketName:
    Description: "BucketName"
    Value: !Ref BucketName
