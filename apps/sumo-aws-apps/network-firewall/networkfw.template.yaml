AWSTemplateFormatVersion: '2010-09-09'
Transform:
  - AWS::Serverless-2016-10-31
  - MacroFirewall
Description: "Template to setup the  AWS Network Firewall app with AWS and Sumo Logic resources for AWS Quick Start Solution."

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: "Sumo Logic Deployment Configuration"
        Parameters:
          - SumoDeployment
          - SumoAccessID
          - SumoAccessKey
          - SumoOrganizationId
          - RemoveSumoResourcesOnDeleteStack

      - Label:
          default: "App Details - Collector Configuration"
        Parameters:
          - InstallNFWApp
          - CollectorName

      - Label:
          default: "App Details - Configure AWS Network Firewall"
        Parameters:
          - CreateNewFW
          - VPCID
          - SubnetID
          - CreateFirewallPolicy
          - NameFirewallPolicy
          - StatefulRule
          - StatelessRule

      - Label:
          default: "App Details - NFW Logs S3 Source Configuration"
        Parameters:
          - CreateS3Bucket
          - LogsS3BucketName
          - LogsNFWBucketPrefix
          - CreateS3Source
          - S3BucketLogsPathExpression
          - S3SourceName
          - S3SourceCategoryName

      - Label:
          default: "AWS Quick Start configuration"
        Parameters:
          - QSS3BucketName
          - QSS3KeyPrefix

      - Label:
          default: "Local Parameters. Do Not Edit the values."
        Parameters:
          - ParentStackName

    ParameterLabels:
      SumoDeployment:
        default: "Sumo Logic Deployment Name"
      SumoAccessID:
        default: "Sumo Logic Access ID"
      SumoAccessKey:
        default: "Sumo Logic Access Key"
      SumoOrganizationId:
        default: "Sumo Logic Organization Id"
      RemoveSumoResourcesOnDeleteStack:
        default: "Delete Sumo Logic Resources when stack is deleted"

      InstallNFWApp:
        default: "Install Sumo Logic Amazon NetworkFirewall Logs App"
      CollectorName:
        default: "Collector Name"
      CreateNewFW:
        default: "Create a AWS Network Firewall"
      SubnetID:
        default: "A SubnetID for new AWS Network Firewall"
      CreateFirewallPolicy:
        default: "Create a Policy for new Network Firewall"
      NameFirewallPolicy:
        default: "ARN of exists Network Policy"
      StatefulRule:
       default: "Create a default statefull rule group for Network Policy"
      StatelessRule:
        default: " Create a default stateless rule group for Network Policy"

      CreateS3Bucket:
        default: "Create AWS S3 Bucket"
      LogsS3BucketName:
        default: "AWS S3 Bucket Name"
      LogsNFWBucketPrefix:
        default: "AWS S3 Bucket Prefix for Network Firewall"
      CreateS3Source:
        default: "Create Sumo Logic Amazon S3 Logs Source"
      S3BucketLogsPathExpression:
        default: "Path Expression for the logs"
      S3SourceName:
        default: "Sumo Logic Amazon S3 Logs Source Name"
      S3SourceCategoryName:
        default: "Sumo Logic Amazon S3 Logs Source Category Name"


      QSS3BucketName:
        default: "Quick Start S3 bucket name"
      QSS3KeyPrefix:
        default: "Quick Start S3 key prefix"

      ParentStackName:
        default: "If Any, Name of parent Stack"


Parameters:
  SumoDeployment:
    Type: String
    AllowedValues:
      - au
      - ca
      - de
      - eu
      - jp
      - us2
      - us1
      - in
      - fed
    Description: "Enter au, ca, de, eu, jp, us2, in, fed or us1."

  SumoAccessID:
    Type: String
    Description: "The Sumo Logic Access ID. Used for Sumo Logic API calls."
    AllowedPattern: ".+"
    ConstraintDescription: "Sumo Logic Access ID can not be empty."

  SumoAccessKey:
    Type: String
    Description: "The Sumo Logic Access Key. Used for Sumo Logic API calls."
    AllowedPattern: ".+"
    ConstraintDescription: "Sumo Logic Access Key can not be empty."
    NoEcho: true

  SumoOrganizationId:
    Description: "The Account Overview page displays information about your Sumo Logic organization. Used for IAM Role in Sumo Logic AWS Sources."
    Type: String
    AllowedPattern: ".+"
    ConstraintDescription: "Sumo Logic Organization Id can not be empty."

  RemoveSumoResourcesOnDeleteStack:
    AllowedValues:
      - true
      - false
    Default: true
    Description: "To delete collectors, sources and apps when the stack is deleted, set this parameter to true. Default is true.
                  Deletes the resources created by the stack. Deletion of updated resources will be skipped."
    Type: String

  InstallNFWApp:
    Type: String
    Description: "Yes -> To Install Sumo Logic Amazon Network Firewall Logs in Sumo Logic for AWS Quick Start Solution.
                  No -> Skip Installation of the app."
    Default: 'Yes'
    AllowedValues:
      - 'Yes'
      - 'No'
  CreateNewFW:
    Type: String
    Description: "Yes - Create a new Network Firewall in AWS.
                  No - To skip creating a new Network Firewall."
    Default: 'No'
    AllowedValues:
      - 'Yes'
      - 'No'
  VPCID:
    Type: String
    Description: "Skip if No is selected. A VPC ID mapping to new Network Firewall"
    Default: ""
  SubnetID:
    Type: String
    Description: "Skip if No is selected. Multi Subnets ID mapping to new Network Firewall. Subnets separated by comma"
    Default: ""
  CreateFirewallPolicy:
    Type: String
    Description: "Yes - Create a Policy for new Network Firewall.
                  No - To skip creating a Policy."
    Default: 'No'
    AllowedValues:
      - 'Yes'
      - 'No'
  NameFirewallPolicy:
    Type: String
    Description: "Skip if Yes is selected. Enter ARN of exists Firewall Policy"
    Default: ""

  StatefulRule:
    Type: String
    Description: "Skip if use a exists Firewall Policy. Enter a stateful rule
                  ex: pass tcp 10.20.20.0/24 45400:45500 <> 10.10.10.0/24 5203 (msg:\"test\";sid:1;rev:1;)"
    Default: ""

  StatelessRule:
    Type: String
    Description: "Skip if use a exists Firewall Policy. Enter multi allowed ports. Ports separated by comma"
    Default: "80"


  CollectorName:
    Type: String
    Description: Change the collector name to be created else default name will be used.
    Default: AWS-NFW-Logs-Collector

  CreateS3Bucket:
    Type: String
    Description: "Yes - Create a new S3 bucket in AWS S3.
                  No - Use an existing S3 bucket from AWS S3 which has NFW Logs."
    Default: 'No'
    AllowedValues:
      - 'Yes'
      - 'No'
  LogsS3BucketName:
    Type: String
    Description: "Existing Bucket Name - Provide value if the Flag is set to No.
                  New Bucket Name - Provide a unique Bucket Name if the flag is set to Yes."

  LogsNFWBucketPrefix:
    AllowedPattern: "^[0-9a-zA-Z-/]*$"
    ConstraintDescription: "S3 bucket prefix for network firewall logs can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/)."
    Default: "NFW/"
    Description: "S3 key prefix for Network Firewall logs. Bucket prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/)."
    Type: "String"

  CreateS3Source:
    Type: String
    Description: "Yes - to create Sumo Logic Amazon S3 Log Source with provided bucket Name.
                  No - to skip creation of the Sumo Logic Amazon S3 Log Source."
    Default: 'Yes'
    AllowedValues:
      - 'Yes'
      - 'No'
  S3BucketLogsPathExpression:
    Type: String
    Description: Path expression to match one or more S3 objects. For example, ABC*.log or ABC.log
    Default: "*AWSLogs/*/network-firewall/*"
  S3SourceName:
    Type: String
    Description: Change the Sumo Logic Amazon S3 Source name to be created else default name will be used.
    Default: AWS-NFW-Flow-Logs-Source
  S3SourceCategoryName:
    Type: String
    Description: "Existing - Change to an existing Source Category from Sumo Logic if Amazon S3 Source is not created.
                  New - Default will be used if Amazon S3 Source is Created."
    Default: AWS/NFW/Logs


  QSS3BucketName:
    AllowedPattern: "^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$"
    ConstraintDescription: "Quick Start bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-)."
    Default: "aws-quickstart"
    Description: "S3 bucket name for the Quick Start assets. This string can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-)."
    Type: "String"

  QSS3KeyPrefix:
    AllowedPattern: "^[0-9a-zA-Z-/]*$"
    ConstraintDescription: "Quick Start key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/)."
    Default: "quickstart-sumo-logic-log-centralization/"
    Description: "S3 key prefix for the Quick Start assets. Quick Start key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/)."
    Type: "String"

  ParentStackName:
    Type: String
    Default: "ParentStackName"
    Description: Parent Stack Name. Do Not Edit the value.

Conditions:
  do_not_use_parent_stack: !Equals [ !Ref ParentStackName, "ParentStackName"]
  UsingDefaultBucket: !Equals [!Ref QSS3BucketName, 'aws-quickstart']
  create_new_fw_aws: !Equals [!Ref CreateNewFW, 'Yes']
  create_fw_policy: !And
    - !Equals [!Ref CreateFirewallPolicy, 'Yes']
    - !Condition create_new_fw_aws
  install_nfw_app: !Equals [!Ref InstallNFWApp, 'Yes']
  create_target_s3_bucket: !And
    - !Equals [!Ref CreateS3Bucket, 'Yes']
    - !Condition create_sns_topic
  install_s3_source: !Equals [!Ref CreateS3Source, 'Yes']

  create_sns_topic: !And
    - !Condition do_not_use_parent_stack
    - !Condition install_s3_source

Resources:
  QuickStartNetworkFirewall:
    Type: AWS::NetworkFirewall::Firewall
    Condition: create_new_fw_aws
    Properties:
      FirewallName: !Join
        - "-"
        - - "AWSQuickStartNetworkFirewall"
          - !Select
            - 0
            - !Split
              - "-"
              - !Select
                - 2
                - !Split
                  - "/"
                  - !Ref "AWS::StackId"
      FirewallPolicyArn: !If [create_fw_policy, !Ref QuickstartFirewallPolicy, !Ref NameFirewallPolicy]
      SubnetMappings:
        - SubnetId: !Ref SubnetID
      VpcId: !Ref VPCID

  QuickstartFirewallPolicy:
    Type: 'AWS::NetworkFirewall::FirewallPolicy'
    Condition: create_fw_policy
    Properties:
      FirewallPolicyName: !Join
        - "-"
        - - "AWSQuickStartFirewallPolicy"
          - !Select
            - 0
            - !Split
              - "-"
              - !Select
                - 2
                - !Split
                  - "/"
                  - !Ref "AWS::StackId"
      FirewallPolicy:
        StatelessDefaultActions:
          - 'aws:forward_to_sfe'
        StatelessFragmentDefaultActions:
          - 'aws:forward_to_sfe'
        StatefulRuleGroupReferences:
          - ResourceArn: !Ref QuickStartStatefulRuleGroup
        StatelessRuleGroupReferences:
          - ResourceArn: !Ref QuickStartStatelessRuleGroup
            Priority: 100
      Description: Firewall Policy for QuickStart

  QuickStartStatefulRuleGroup:
    Type: 'AWS::NetworkFirewall::RuleGroup'
    Condition: create_fw_policy
    Properties:
      Type: STATEFUL
      RuleGroupName: !Join
        - "-"
        - - "QuickStartStatelessRuleGroup"
          - !Select
            - 0
            - !Split
              - "-"
              - !Select
                - 2
                - !Split
                  - "/"
                  - !Ref "AWS::StackId"
      RuleGroup:
        RulesSource:
          RulesString: !Ref StatefulRule
      Capacity: 100
      Description: AWS QuickStart Stateful Rule Group

  QuickStartStatelessRuleGroup:
    Type: 'AWS::NetworkFirewall::RuleGroup'

    Condition: create_fw_policy
    Properties:
      Type: STATELESS
      RuleGroupName: !Join
        - "-"
        - - "QuickStartStatelessRuleGroup"
          - !Select
            - 0
            - !Split
              - "-"
              - !Select
                - 2
                - !Split
                  - "/"
                  - !Ref "AWS::StackId"
      RuleGroup:
        RulesSource:
          StatelessRulesAndCustomActions:
            StatelessRules:
              - RuleDefinition:
                  MatchAttributes:
                    Sources:
                      - AddressDefinition: 0.0.0.0/0
                    Destinations:
                      - AddressDefinition: 0.0.0.0/0
                    SourcePorts:
                      - FromPort: 1024
                        ToPort: 65535
                    DestinationPorts:
                      - FromPort: !Ref StatelessRule
                        ToPort: !Ref StatelessRule
                    Protocols:
                      - 6
                  Actions:
                    - 'aws:pass'
                Priority: 1
              - RuleDefinition:
                  MatchAttributes:
                    Sources:
                      - AddressDefinition: 0.0.0.0/0
                    Destinations:
                      - AddressDefinition: 0.0.0.0/0
                    SourcePorts:
                      - FromPort: !Ref StatelessRule
                        ToPort: !Ref StatelessRule
                    DestinationPorts:
                      - FromPort: 1024
                        ToPort: 65535
                    Protocols:
                      - 6
                  Actions:
                    - 'aws:pass'
                Priority: 2
      Capacity: 100
      Description: Stateless Rule Group for QuickStart

  FirewallLoggingConfiguration:
    Type: 'AWS::NetworkFirewall::LoggingConfiguration'
    Condition: create_new_fw_aws
    Properties:
      FirewallArn: !Ref QuickStartNetworkFirewall
      LoggingConfiguration:
        LogDestinationConfigs:
          - LogType: FLOW
            LogDestinationType: S3
            LogDestination:
              bucketName: !Ref LogsS3BucketName
              prefix: !Sub "${LogsNFWBucketPrefix}flows"
          - LogType: ALERT
            LogDestinationType: S3
            LogDestination:
              bucketName: !Ref LogsS3BucketName
              prefix: !Sub "${LogsNFWBucketPrefix}alerts"


  SumoLogicHelperRole:
    Type: AWS::IAM::Role
    Condition: do_not_use_parent_stack
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Path: /
      Policies:
        - PolicyName: SumoPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                Resource: !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:*"
              - Effect: Allow
                Action:
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/${AWS::StackName}-SumoLogicHelperFunction:*"

  SumoLogicHelperFunction:
    Type: 'AWS::Serverless::Function'
    Condition: do_not_use_parent_stack
    Properties:
      FunctionName: !Sub "${AWS::StackName}-SumoLogicHelperFunction"
      Handler: main.handler
      Runtime: python3.11
      CodeUri:
        Bucket: !Sub
          - "${S3Bucket}"
          - S3Bucket: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
        Key: !Sub "${QSS3KeyPrefix}apps/sumo-aws-apps/sumologic-app-utils/sumo_app_utils.zip"
      MemorySize: 128
      Timeout: 900
      Role:
        Fn::GetAtt:
          - SumoLogicHelperRole
          - Arn

  SumoRole:
    Type: AWS::IAM::Role
    Condition: do_not_use_parent_stack
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              AWS: arn:aws:iam::926226587429:root
            Action: sts:AssumeRole
            Condition:
              StringEquals:
                sts:ExternalId: !Sub "${SumoDeployment}:${SumoOrganizationId}"
      Path: "/"
      Policies:
        - PolicyName: SumoPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:GetObjectVersion
                  - s3:ListBucketVersions
                  - s3:ListBucket
                Resource:
                  "*"

  SumoSNSTopic:
    Condition: create_sns_topic
    Type: "AWS::SNS::Topic"
    Properties:
      TopicName: !Sub "SumoSNSTopic-${AWS::StackName}"

  SumoSNSSubscription:
    Condition: install_s3_source
    Type: "AWS::SNS::Subscription"
    Properties:
      TopicArn: !If
        - create_sns_topic
        - !Ref SumoSNSTopic
        - !ImportValue
          'Fn::Sub': '${ParentStackName}-SNSTopicArn'
      Endpoint: !GetAtt SumoS3Source.SUMO_ENDPOINT
      Protocol: https
      DeliveryPolicy:
        healthyRetryPolicy:
          numRetries: 40
          minDelayTarget: 10
          maxDelayTarget: 300
          numMinDelayRetries: 3
          numMaxDelayRetries: 5
          numNoDelayRetries: 0
          backoffFunction: exponential

  SumoSNSpolicy:
    Condition: create_sns_topic
    Type: "AWS::SNS::TopicPolicy"
    Properties:
      PolicyDocument:
        Id: SumoTopicPolicy
        Statement:
          - Action:
              - sns:Publish
            Condition:
              StringEquals:
                aws:SourceAccount: !Ref "AWS::AccountId"
              ArnLike:
                aws:SourceArn: !Sub "arn:aws:s3:::${LogsS3BucketName}"
            Effect: Allow
            Principal:
              AWS: "*"
            Resource:
              - !Ref SumoSNSTopic
      Topics:
        - Ref: SumoSNSTopic

  TargetS3Bucket:
    Condition: create_target_s3_bucket
    Type: AWS::S3::Bucket
    DependsOn:
      - SumoSNSpolicy
    Properties:
      BucketName: !Ref LogsS3BucketName
      NotificationConfiguration:
        TopicConfigurations:
          - Event: s3:ObjectCreated:Put
            Topic: !Ref SumoSNSTopic
    DeletionPolicy: Retain

  SumoHostedCollector:
    Type: Custom::Collector
    Condition: install_s3_source
    Properties:
      ServiceToken: !If
        - do_not_use_parent_stack
        - !GetAtt
          - SumoLogicHelperFunction
          - Arn
        - !ImportValue
          'Fn::Sub': '${ParentStackName}-SumoLogicHelperFunctionARN'
      Region: !Ref "AWS::Region"
      CollectorType: Hosted
      RemoveOnDeleteStack: !If [do_not_use_parent_stack,!Ref RemoveSumoResourcesOnDeleteStack,false]
      CollectorName: !Ref CollectorName
      SumoAccessID: !Ref SumoAccessID
      SumoAccessKey: !Ref SumoAccessKey
      SumoDeployment: !Ref SumoDeployment

  SumoS3Source:
    Type: Custom::AWSSource
    Condition: install_s3_source
    Properties:
      ServiceToken: !If
        - do_not_use_parent_stack
        - !GetAtt
          - SumoLogicHelperFunction
          - Arn
        - !ImportValue
          'Fn::Sub': '${ParentStackName}-SumoLogicHelperFunctionARN'
      SourceType: AwsS3Bucket
      Region: !Ref "AWS::Region"
      SourceName: !Ref S3SourceName
      RemoveOnDeleteStack: !Ref RemoveSumoResourcesOnDeleteStack
      SourceCategory: !Ref S3SourceCategoryName
      CollectorId: !GetAtt SumoHostedCollector.COLLECTOR_ID
      SumoAccessID: !Ref SumoAccessID
      SumoAccessKey: !Ref SumoAccessKey
      SumoDeployment: !Ref SumoDeployment
      TargetBucketName: !Ref LogsS3BucketName
      PathExpression: !Ref S3BucketLogsPathExpression
      RoleArn: !If
        - do_not_use_parent_stack
        - !GetAtt
          - SumoRole
          - Arn
        - !ImportValue
          'Fn::Sub': '${ParentStackName}-SumoSourceRoleARN'
      multilineProcessingEnabled: false
      useAutolineMatching": false

  SumoNFWLogApp:
    Type: Custom::App
    Condition: install_nfw_app
    Properties:
      ServiceToken: !If
        - do_not_use_parent_stack
        - !GetAtt
          - SumoLogicHelperFunction
          - Arn
        - !ImportValue
          'Fn::Sub': '${ParentStackName}-SumoLogicHelperFunctionARN'
      Region: !Ref "AWS::Region"
      AppName: "Amazon QuickStart - AWS Network Firewall"
      AppId: "3735b649-d337-49a5-ad94-d0650ef02db9"
      RemoveOnDeleteStack: !Ref RemoveSumoResourcesOnDeleteStack
      AppSources:
        logsrc: !Sub "_sourceCategory=${S3SourceCategoryName}"
      SumoAccessID: !Ref SumoAccessID
      SumoAccessKey: !Ref SumoAccessKey
      SumoDeployment: !Ref SumoDeployment


Outputs:
  SumoRoleArn:
    Description: ARN of the cretaed Role.
    Condition: do_not_use_parent_stack
    Value: !GetAtt SumoRole.Arn

  SumoEndpoint:
    Description: SNS Subscription Endpoint
    Condition: install_s3_source
    Value: !GetAtt SumoS3Source.SUMO_ENDPOINT
