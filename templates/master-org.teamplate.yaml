AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: "This CloudFormation template sets up AWS GuardDuty apps."
Metadata:
  QuickStartDocumentation:
    EntrypointName: "Parameters for deploying AWS GuardDuty"
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: "1.1 Access configuration (required)"
        Parameters:
          - Section1SumoLogicDeployment
          - Section1SumoLogicAccessID
          - Section1SumoLogicAccessKey
          - Section1SumoLogicOrganizationId
          - Section1SumoLogicResourceRemoveOnDeleteStack
          - Section1SecurityToolingAccountId
          - Section1SecurityToolingRegion
          - Section1LogArchivingAccountId
          - Section1LogArchivingRegion
          - Section1OrganizationID
          - Section1OrganizationUnitID
      - Label:
          default: "2.1 GuardDuty App configuration"
        Parameters:
          - Section2InstallSumoGuardDutyApps 
          - Section2InstallAWSGuardDutyApp
      - Label:
          default: "2.2 GuardDuty Attributes"
        Parameters:
          - Section2AutoEnableS3Logs
          - Section2FindingPublishingFrequency
          - Section2GuardDutyDeliveryBucketPrefix
      - Label:
          default: "2.3 GuardDuty Regions configuration"
        Parameters:
          - Section2GuardDutyRegions
      - Label:
          default: "2.4 GuardDuty log-source configuration"
        Parameters:
          - Section2GuardDutyCreateHttpLogsSource
          - Section2GuardDutyHttpLogsSourceCategoryName

      - Label:
          default: "AWS Quick Start configuration"
        Parameters:
          - QSS3BucketName
          - QSS3BucketRegion
          - QSS3KeyPrefix

    ParameterLabels:
      Section1SumoLogicDeployment:
        default: "Sumo Logic deployment name"
      Section1SumoLogicAccessID:
        default: "Sumo Logic access ID"
      Section1SumoLogicAccessKey:
        default: "Sumo Logic access key"
      Section1SumoLogicOrganizationId:
        default: "Sumo Logic organization ID"
      Section1SumoLogicResourceRemoveOnDeleteStack:
        default: "Delete Sumo Logic resources when stack is deleted"
      Section1SecurityToolingAccountId:
        default: "Security tooling account ID"
      Section1SecurityToolingRegion:
        default: "Security tooling account region"
      Section1LogArchivingAccountId:
        default: "Log archiving account ID"
      Section1LogArchivingRegion:
        default: "Log archiving account region"
      Section1OrganizationID:
        default: "AWS Organizations ID"
      Section1OrganizationUnitID:
        default: "Organization unit (OU) ID"

      # GuardDuty apps parameters
      Section2InstallAWSGuardDutyApp:
        default: "Install AWS GuardDuty app"
      Section2InstallSumoGuardDutyApps:
        default: "Install Sumo Logic GuardDuty app"       
      Section2GuardDutyCreateHttpLogsSource:
        default: "Create Sumo Logic HTTP logs source"
      Section2GuardDutyHttpLogsSourceCategoryName:
        default: "Sumo Logic HTTP logs source category name"
      Section2AutoEnableS3Logs:
        default: "Auto Enable S3 Logs"
      Section2FindingPublishingFrequency:
        default: "Finding Publishing Frequency"
      Section2GuardDutyRegions:
        default: "GuardDuty Regions"
      Section2GuardDutyDeliveryBucketPrefix:
        default: "GuardDuty Delivery Bucket Prefix"
        
      QSS3BucketName:
        default: "Quick Start S3 bucket name"
      QSS3BucketRegion:
        default: "Quick Start S3 bucket region"
      QSS3KeyPrefix:
        default: "Quick Start S3 key prefix"
Parameters:
  Section1SumoLogicDeployment:
    Type: String
    AllowedValues:
      - au
      - ca
      - de
      - eu
      - jp
      - us2
      - us1
      - in
      - fed
    Description: "Enter the geographic location of the deployment: au, ca, de, eu, jp, us2, in, fed, or us1."
    Default: 'us2'
  Section1SumoLogicAccessID:
    Type: String
    Description: "Enter the Sumo Logic console access ID, which you received when you created the access key."
    AllowedPattern: ".+"
    ConstraintDescription: "Sumo Logic access ID cannot be empty."
  Section1SumoLogicAccessKey:
    Type: String
    Description: "Enter your Sumo Logic access key. Retrieve this from your Sumo Logic account."
    AllowedPattern: ".+"
    ConstraintDescription: "Sumo Logic access key cannot be empty."
    NoEcho: true
  Section1SumoLogicOrganizationId:
    Description: "Enter your Sumo Logic organization ID, which you can find in the Sumo Logic console, under Account."
    Type: String
    AllowedPattern: ".+"
    ConstraintDescription: "Sumo Logic organization ID cannot be empty."
  Section1SumoLogicResourceRemoveOnDeleteStack:
    AllowedValues:
      - true
      - false
    Default: true
    Description: "If this parameter is set to true, the collector, sources, and Sumo Logic apps are deleted.
                  If this parameter is set to false, then the collector, sources, and Sumo Logic apps are not deleted."
    Type: String
  Section1SecurityToolingAccountId:
    Description: "Enter your security tooling account ID"
    Type: String
    AllowedPattern: '^\d{12}$'
    ConstraintDescription: "Security tooling account ID cannot be empty. Must be 12 digits"
  Section1LogArchivingAccountId:
    Description: "Enter your log archiving account ID"
    Type: String
    AllowedPattern: '^\d{12}$'
    ConstraintDescription: "Log archiving account ID cannot be empty. Must be 12 digits"
  Section1SecurityToolingRegion:
    Type: String
    AllowedValues:
      - us-east-2
      - us-east-1
      - us-west-1
      - us-west-2
      - af-south-1
      - ap-east-1
      - ap-south-1
      - ap-northeast-3
      - ap-northeast-2
      - ap-southeast-1
      - ap-southeast-2
      - ap-northeast-1
      - ca-central-1
      - eu-central-1
      - eu-west-1
      - eu-west-2
      - eu-south-1
      - eu-west-3
      - eu-north-1
      - me-south-1
      - sa-east-1
    Default: us-east-1
    Description: "Enter your security tooling account region"
  Section1LogArchivingRegion:
    Type: String
    AllowedValues:
      - us-east-2
      - us-east-1
      - us-west-1
      - us-west-2
      - af-south-1
      - ap-east-1
      - ap-south-1
      - ap-northeast-3
      - ap-northeast-2
      - ap-southeast-1
      - ap-southeast-2
      - ap-northeast-1
      - ca-central-1
      - eu-central-1
      - eu-west-1
      - eu-west-2
      - eu-south-1
      - eu-west-3
      - eu-north-1
      - me-south-1
      - sa-east-1
    Default: us-east-1
    Description: "Enter your log archiving account region"
  Section1OrganizationID:
    AllowedPattern: '^o-[a-z0-9]{10,32}$'
    Description: >
      The Org Id must be a 12 character string starting with o- and followed by 10 lower case alphanumeric characters
    MaxLength: 12
    MinLength: 12
    Type: String
  Section1OrganizationUnitID:
    Description: >
      Organizational unit (OU) ID - A string that begins with "ou-" followed by from 4 to 32 lowercase letters or digits (the ID of the root that the OU is in). This string is followed by a second "-" dash and from 8 to 32 additional lowercase letters or digits  
    AllowedPattern: '^ou-[0-9a-z]{4,32}-[a-z0-9]{8,32}$'
    MaxLength: 100
    MinLength: 16
    Type: String

  # GuardDuty apps parameters
  Section2InstallAWSGuardDutyApp:
    Type: String
    Description: "Yes: Install Amazon GuardDuty app.
                  No: Skip installation of app."
    Default: 'Yes'
    AllowedValues:
      - 'Yes'
      - 'No'  
  Section2InstallSumoGuardDutyApps:
    Type: String
    Description: "GuardDuty: Install Sumo Amazon GuardDuty app.
                  GlobalGuardDutyApp: Install Sumo Global Intelligence for Amazon GuardDuty app.
                  Both: Install both apps.
                  Skip: Skip installation of apps."
    Default: 'Both'
    AllowedValues:
      - 'GuardDuty'
      - 'GlobalGuardDuty'
      - 'Both'
      - 'Skip'
  Section2GuardDutyCreateHttpLogsSource:
    Type: String
    Description: "Yes: Create Sumo Logic HTTP log source to collect GuardDuty logs.
                  No: Skip creation of the Sumo Logic HTTP log source."
    Default: 'Yes'
    AllowedValues:
      - 'Yes'
      - 'No'
  Section2GuardDutyHttpLogsSourceCategoryName:
    Type: String
    Description: "Required when Guardduty HTTP LogSource is set to No. Provide an existing source category name from the GuardDuty logs. This is used for app installation."
    Default: "aws/quickstart/guardduty/logs"

  Section2AutoEnableS3Logs:
    AllowedValues: ['true', 'false']
    Default: 'false'
    Description: Auto enable S3 logs
    Type: String
  Section2FindingPublishingFrequency:
    AllowedValues: ['FIFTEEN_MINUTES', 'ONE_HOUR', 'SIX_HOURS']
    Default: 'FIFTEEN_MINUTES'
    Description: Finding publishing frequency
    Type: String
  Section2GuardDutyRegions:
    Description: Comma delimited list of regions to enable GuardDuty. Leave blank to enable all regions.
    Default: 'us-east-1, us-east-2'
    Type: String
  Section2GuardDutyDeliveryBucketPrefix:
    AllowedPattern: "^$|^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$"
    ConstraintDescription:
      S3 bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-).
      It cannot start or end with a hyphen (-).
    Default: 'guardduty-delivery'
    Description: >
      GuardDuty Delivery S3 bucket prefix.
      The account and region will get added to the end. e.g. guardduty-delivery-123456789012-us-east-1
    Type: String

  QSS3BucketName:
    AllowedPattern: "^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$"
    ConstraintDescription: "Quick Start bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-)."
    Default: "aws-quickstart"
    Description: "S3 bucket name for the Quick Start assets. This string can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-)."
    Type: "String"
  QSS3BucketRegion:
    Default: "us-east-1"
    Description: "The AWS Region where the Quick Start S3 bucket (QSS3BucketName) is hosted. When using your own bucket, you must specify this value."
    Type: String
  QSS3KeyPrefix:
    AllowedPattern: "^[0-9a-zA-Z-/]*$"
    ConstraintDescription: "Quick Start key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/)."
    Default: "quickstart-sumo-logic-log-centralization/"
    Description: "S3 key prefix for the Quick Start assets. Quick Start key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/)."
    Type: "String"

Conditions:
  UsingDefaultBucket: !Equals [!Ref QSS3BucketName, 'aws-quickstart']

  # Conditions for GuardDuty apps
  install_sumo_guardduty_app: !Or
    - !Equals [ !Ref Section2InstallSumoGuardDutyApps, 'GuardDuty' ]
    - !Equals [ !Ref Section2InstallSumoGuardDutyApps, 'Both' ]
  install_sumo_global_guardduty_app: !Or
    - !Equals [ !Ref Section2InstallSumoGuardDutyApps, 'GlobalGuardDuty' ]
    - !Equals [ !Ref Section2InstallSumoGuardDutyApps, 'Both' ]
  create_guardduty_source: !Equals [ !Ref Section2GuardDutyCreateHttpLogsSource, 'Yes' ]
  install_aws_guardduty_app: !Equals [ !Ref Section2InstallAWSGuardDutyApp, 'Yes' ]

  # Conditions for calling child stack of each app if any resource create condition is true.
  call_guardduty_stack: !Or
    - !Condition install_sumo_guardduty_app
    - !Condition install_sumo_global_guardduty_app
    - !Condition create_guardduty_source
    - !Condition install_aws_guardduty_app

Resources:
  WaitHandle:
    Type: "AWS::CloudFormation::WaitConditionHandle"

  CommonOrgManagement:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub
        - 'https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}apps/sumo-aws-apps/common-org/common-org-management.template.yaml'
        - S3Region: !If [UsingDefaultBucket, !Ref 'AWS::Region', !Ref QSS3BucketRegion]
          S3Bucket: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
      Parameters:
        AdministrationRoleName: !Sub 'AdministrationRole-${AWS::StackName}'
        ExecutionRoleRuleName: !Sub 'ExecutionRole-${AWS::StackName}'
        OrganizationUnitID: !Ref Section1OrganizationUnitID
        QSS3BucketName: !Ref QSS3BucketName  
        QSS3BucketRegion: !Ref QSS3BucketRegion 
        QSS3KeyPrefix: !Ref QSS3KeyPrefix
        SumoDeployment: !Ref Section1SumoLogicDeployment
        SumoAccessID: !Ref Section1SumoLogicAccessID
        SumoAccessKey: !Ref Section1SumoLogicAccessKey
        SumoOrganizationId: !Ref Section1SumoLogicOrganizationId
        RemoveSumoResourcesOnDeleteStack: !Ref Section1SumoLogicResourceRemoveOnDeleteStack
        
#Stackset for GuardDuty Delivery KMS Key
  DeliveryKMSKeyStackset:
    Condition: call_guardduty_stack
    Type: 'AWS::CloudFormation::StackSet'
    DependsOn:
      - "CommonOrgManagement"
    Properties:
      AdministrationRoleARN: !GetAtt CommonOrgManagement.Outputs.AdministrationRoleArn
      ExecutionRoleName: !Select [ 1, !Split ['/', !GetAtt CommonOrgManagement.Outputs.ExecutionRoleArn]]
      StackSetName: !Sub 'GuardDuty-DeliveryKMSKey-${AWS::StackName}'
      PermissionModel: SELF_MANAGED
      Capabilities:
        - 'CAPABILITY_NAMED_IAM'
        - 'CAPABILITY_IAM'
        - 'CAPABILITY_AUTO_EXPAND'
      StackInstancesGroup:
        - Regions:
            - !Ref Section1SecurityToolingRegion
          DeploymentTargets:
            Accounts:
              - !Ref Section1SecurityToolingAccountId    
      TemplateURL: !Sub
        - 'https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}apps/sumo-aws-apps/guardduty-org/guardduty-org-delivery-kms-key.yaml'
        - S3Region: !If [UsingDefaultBucket, !Ref 'AWS::Region', !Ref QSS3BucketRegion]
          S3Bucket: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
      Parameters:
        - ParameterKey: 'LoggingAccountId'
          ParameterValue: !Ref Section1LogArchivingAccountId
        - ParameterKey: 'OrgPrimaryAccountId'
          ParameterValue: !Ref "AWS::AccountId" 
        - ParameterKey: 'GuardDutyDeliveryKeyAlias'
          ParameterValue: !Sub "GuardDuty-KMS-${AWS::StackName}"         
           
#Get ARN of GuardDuty Delivery KMS Key
  DeliveryKMSKeyARN:
    Condition: call_guardduty_stack
    Type: Custom::AWSARN
    DependsOn:
      - "DeliveryKMSKeyStackset"
    Properties:
      ServiceToken: !GetAtt CommonOrgManagement.Outputs.SumoLogicLambdaHelperARN
      accountID: !Ref Section1SecurityToolingAccountId
      roleName: !Select [ 1, !Split ['/', !GetAtt CommonOrgManagement.Outputs.ExecutionRoleArn]]
      region: !Ref Section1SecurityToolingRegion
      stackName: !Sub 'GuardDuty-DeliveryKMSKey-${AWS::StackName}'
      outputKey: oGuardDutyDeliveryKeyArn

  #Stackset for GuardDuty delivery S3 bucket
  DeliveryS3BucketStackset:
    Condition: call_guardduty_stack
    DependsOn:
      - "DeliveryKMSKeyARN"
    Type: 'AWS::CloudFormation::StackSet'
    Properties:
      AdministrationRoleARN: !GetAtt CommonOrgManagement.Outputs.AdministrationRoleArn
      ExecutionRoleName: !Select [ 1, !Split ['/', !GetAtt CommonOrgManagement.Outputs.ExecutionRoleArn]]
      StackSetName: !Sub "GuardDuty-Delivery-S3-Bucket-${AWS::StackName}"
      PermissionModel: SELF_MANAGED
      Capabilities:
        - 'CAPABILITY_NAMED_IAM'
        - 'CAPABILITY_IAM'
        - 'CAPABILITY_AUTO_EXPAND'
      StackInstancesGroup:
        - Regions:
            - !Ref Section1LogArchivingRegion
          DeploymentTargets:
            Accounts:
              - !Ref Section1LogArchivingAccountId
      TemplateURL: !Sub
        - 'https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}apps/sumo-aws-apps/guardduty-org/guardduty-org-delivery-s3-bucket.yaml'
        - S3Region: !If [UsingDefaultBucket, !Ref 'AWS::Region', !Ref QSS3BucketRegion]
          S3Bucket: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
      Parameters:
        - ParameterKey: 'GuardDutyDeliveryKMSKeyArn'
          ParameterValue: !GetAtt DeliveryKMSKeyARN.ARN
        - ParameterKey: 'GuardDutyDeliveryBucketPrefix'
          ParameterValue: !Ref Section2GuardDutyDeliveryBucketPrefix

  #Get ARN of GuardDuty S3 bucket
  DeliveryS3BucketARN:
    Condition: call_guardduty_stack
    Type: Custom::AWSARN
    DependsOn:
      - "DeliveryS3BucketStackset"
    Properties:
      ServiceToken: !GetAtt CommonOrgManagement.Outputs.SumoLogicLambdaHelperARN
      accountID: !Ref Section1LogArchivingAccountId
      roleName: !Select [ 1, !Split ['/', !GetAtt CommonOrgManagement.Outputs.ExecutionRoleArn]]
      region: !Ref Section1LogArchivingRegion
      stackName:  !Sub "GuardDuty-Delivery-S3-Bucket-${AWS::StackName}"
      outputKey: oGuardDutyDeliveryS3Bucket

#Stackset for GuardDuty Delete Detector Role
  DeleteDetectorRoleStackset:
    Condition: call_guardduty_stack
    DependsOn:
      - "DeliveryS3BucketARN"
    Type: 'AWS::CloudFormation::StackSet'
    Properties:
      StackSetName: !Sub "GuardDuty-Delete-Detector-Role-${AWS::StackName}"
      PermissionModel: SERVICE_MANAGED
      Capabilities:
        - 'CAPABILITY_NAMED_IAM'
        - 'CAPABILITY_IAM'
        - 'CAPABILITY_AUTO_EXPAND' 
      StackInstancesGroup:
        - Regions:
            - !Ref Section1SecurityToolingRegion
          DeploymentTargets:
              OrganizationalUnitIds: 
                - !Ref Section1OrganizationUnitID
      TemplateURL: !Sub
        - 'https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}apps/sumo-aws-apps/guardduty-org/guardduty-org-delete-detector-role.yaml'
        - S3Region: !If [UsingDefaultBucket, !Ref 'AWS::Region', !Ref QSS3BucketRegion]
          S3Bucket: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
      AutoDeployment: 
        Enabled: true
        RetainStacksOnAccountRemoval: true
      Parameters: 
        - ParameterKey: 'DeleteDetectorRoleName'
          ParameterValue: !Sub "DeleteDetectorRole-${AWS::StackName}"
        - ParameterKey: 'OrgPrimaryAccountId'
          ParameterValue: !Ref "AWS::AccountId"

#Stack for GuardDuty Configuration
  ConfigurationStack:
    Condition: call_guardduty_stack
    DependsOn:
      - "DeleteDetectorRoleStackset"
    Type: 'AWS::CloudFormation::Stack'
    Properties:
      TemplateURL: !Sub
        - 'https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}apps/sumo-aws-apps/guardduty-org/guardduty-org-configuration.yaml'
        - S3Region: !If [UsingDefaultBucket, !Ref 'AWS::Region', !Ref QSS3BucketRegion]
          S3Bucket: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]            
      Parameters:
        SumoDeployment: !Ref Section1SumoLogicDeployment
        SumoAccessID: !Ref Section1SumoLogicAccessID
        SumoAccessKey: !Ref Section1SumoLogicAccessKey
        RemoveSumoResourcesOnDeleteStack: !Ref Section1SumoLogicResourceRemoveOnDeleteStack
        InstallSumoGuardDutyApp: !If [install_sumo_guardduty_app, "Yes", "No"]
        InstallSumoGlobalGuardDutyApp: !If [install_sumo_global_guardduty_app, "Yes", "No"]
        CollectorName: !Sub "aws-quickstart-collector-${AWS::AccountId}" 
        CreateHttpLogsSource: !If [create_guardduty_source, "Yes", "No"]
        HttpLogsSourceName: !Sub "aws-quickstart-guardduty-${AWS::Region}"
        HttpLogsSourceCategoryName: !If [create_guardduty_source, "aws/quickstart/guardduty/logs", !Ref Section2GuardDutyHttpLogsSourceCategoryName]
        InstallAWSGuardDutyApp: !If [install_aws_guardduty_app, "Yes", "No"]
        AutoEnableS3Logs: !Ref Section2AutoEnableS3Logs
        ConfigurationRoleName: !Sub 'ConfigurationRole-${AWS::StackName}'
        DelegatedAdminAccountId: !Ref AWS::AccountId
        DeleteDetectorRoleName: !Sub 'DeleteDetectorRole-${AWS::StackName}'
        EnabledRegions: !Ref Section2GuardDutyRegions
        FindingPublishingFrequency: !Ref Section2FindingPublishingFrequency 
        KMSKeyArn: !GetAtt DeliveryKMSKeyARN.ARN 
        PublishingDestinationBucketName: !GetAtt DeliveryS3BucketARN.ARN
        LambdaExecutionRoleName: !Select [ 1, !Split ['/', !GetAtt CommonOrgManagement.Outputs.SumoLogicHelperRoleARN]]
        OrganizationId: !Ref Section1OrganizationID 
        QSS3BucketName: !Ref QSS3BucketName  
        QSS3BucketRegion: !Ref QSS3BucketRegion 
        QSS3KeyPrefix: !Ref QSS3KeyPrefix
        ParentStackName: !Sub 'ParentStack-${AWS::StackName}'
        ParentHelperFunctionArn: !GetAtt CommonOrgManagement.Outputs.SumoLogicLambdaHelperARN                                    
                
                                                                            

